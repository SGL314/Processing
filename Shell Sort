int[] array;
int n = 50;
int teto;
int pi = 0;
int pj = 0;

void setup(){
    size(800,800);
    create();
    thread("SS");
}

void create(){
  array = new int[n];
  teto = 100;
  for (int i =0;i<n;i++){
    array[i] = (int) random(teto);
  }
  pi = 0;
  pj = 0;
}
           

void SS(){
    while (true){
        ShellSort(array);
        create();
    }
}

void ShellSort(int[] arr){
  n = arr.length;
  int h = 1;
  while (h< n/3){
    h = 3*h + 1;
  }
  while (h >= 1){
      for (int i = h; i<n;i++){
          pi = i;
          delay(50);
          int temp = arr[i];
          int j = i;
          while (j>= h && arr[j-h] > temp){
              arr[j] = arr[j-h];
              j -= h;
              pj = j;
              delay(50);
          }
          arr[j] = temp;
          delay(50);
      }
      h /= 3;
  }
}
        
void draw(){
    background(0,0,0);
    int p=1;
    for (int v : array){
        fill(0,0,255);
        if (pi == p-1)
          fill(0,255,0);
        if (pj == p-1)
          fill(255,0,0);
        
        rect(width/n*(p-1),height - height/teto*v,width/n,height/10*v);
        p+=1;
    }
}
