//Dengoso 2
import processing.serial.*;

int corMosqNor = #000000;
int corMosqInf = #BC1EAD;
int corMosqPro = #2B2FD6;
int corPersNor = #4873DE;
int corPersInf = #FF0000;
int corPersPro = #57D894;

int tempoThread = 5; //ms
int tamP = 20;
int tamM = 4;
Serial ks;

int qt_i_P = 500;
int qt_i_M = 10;

class Person{
    String state = "normal";
    float px = 0;
    float py = 0;
    public Person(float ipx, float ipy){
        px = ipx;
        py = ipy;
    }
}

class Mosq{
    String state = "normal";
    float px = 0;
    float py = 0;
    boolean did = false;
    Person set;
    public Mosq(float ipx, float ipy){
        px = ipx;
        py = ipy;
    }
}

Person[] Ps = new Person[0];
Mosq[] Ms = new Mosq[0];

void setup(){
    size(800,800);
    create_init();
    thread("Wrunner");
}

int Rpx(){
    int px = (int) ((width+1)*random(1));
    return px;
}
int Rpy(){
    int py = (int) ((height+1)*random(1));
    return py;
}
int rd(int num){
    return (int) (random(num));
}

void keyPressed(){
   print(key);
}

void create_init(){
    Ps = new Person[qt_i_P];
    Ms = new Mosq[qt_i_M];
    for (int i=0;i<qt_i_P;i++){
        Ps[i] = new Person(Rpx(),Rpy());
        if (i==0){
            Ps[i].state = "infec";
        }else if (i==1){
            Ps[i].state = "protec";
        }
    }
    for (int i=0;i<qt_i_M;i++){
        Ms[i] = new Mosq(Rpx(),Rpy());
    }
}

void draw(){
    background(255,255,255);
    int qmn,qmi,qmp,qpn,qpi,qpp;
    
    qmi=0;
    qmn=0;
    qmp=0;
    qpi=0;
    qpn=0;
    qpp=0;
    //runner();
    for (Person p : Ps){
        stroke(1000);
        if (p.state == "normal"){
            fill(corPersNor);
            qpn++;
        }else if (p.state == "protec"){
            fill(corPersPro);
            qpp++;
        }else{
            fill(corPersInf);
            qpi++;
        }

        p.px += rd(3)-1;
        p.py += rd(3)-1;

        if (p.px < tamP/2){
            p.px += 1;
        }
        if (p.px > width-tamP/2){
            p.px -= 1;
        }
        if (p.py < tamP/2){
            p.py += 1;
        }
        if (p.py > height-tamP/2){
            p.py -= 1;
        }

        circle(p.px,p.py,tamP);
    }

    for (Mosq m : Ms){
        stroke(1000);
        if (m.state == "normal"){
            fill(corMosqNor);
            qmn++;
        }else if (m.state == "protec"){
            fill(corMosqPro);
            qmp++;
        }else{
            fill(corMosqInf);
            qmi++;
        }
        circle(m.px,m.py,tamM);
    }

    //print("\nP: " + qpn + " " + qpi + " " + qpp);
    //print(" M: " + qmn + " " + qmi + " " + qmp);
}

void Wrunner(){
    while (true){
        delay(tempoThread);
        runner();
    }
}

void runner(){
    int num,rd;

    for (Mosq m : Ms){
        if (!(m.did)){
            num = (int) random(Ps.length);
            m.set = Ps[num];
            m.did = true;
        }else{
            rd = rd(2);
            if (rd==0){
                if (m.px > m.set.px){
                    m.px -= 1;
                }else if (m.px < m.set.px){
                    m.px += 1;
                }else if (m.py > m.set.py){
                    m.py -= 1;
                }else if (m.py < m.set.py){
                    m.py += 1;
                }
            }else{
                if (m.py > m.set.py){
                    m.py -= 1;
                }else if (m.py < m.set.py){
                    m.py += 1;
                }else if (m.px > m.set.px){
                    m.px -= 1;
                }else if (m.px < m.set.px){
                    m.px += 1;
                }
            }

            if (m.px == m.set.px && m.py == m.set.py){
                if (m.set.state == "normal"){
                    m.set.state = m.state;
                }else if (m.set.state == "infec" && m.state != "protec"){
                    m.state = m.set.state;
                }else if (m.set.state == "protec"){
                    m.state = "protec";
                }
                m.did = false;
            }
        }

    }
    

}
